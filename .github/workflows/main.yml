name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    environment: prod
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build with Maven
        run: mvn -B package --file app/spring-helloworld/pom.xml

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ vars.DOCKER_HUB_IMAGE }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./app/spring-helloworld/Dockerfile
          push: true
          tags: ${{ vars.DOCKER_HUB_IMAGE }}:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: Get AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Update Kubeconfig
        run: |
          aws eks update-kubeconfig --name ${{ vars.CLUSTER_NAME }} --region ${{ vars.AWS_REGION }} --kubeconfig ./kubeconfig
          echo 'KUBE_CONFIG_DATA<<EOF' >> $GITHUB_ENV
          cat ./kubeconfig | base64 >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - name: Helm Chart Deployment
        uses: koslib/helm-eks-action@master
        with:
          kubeconfig: ${{ env.KUBE_CONFIG_DATA }}
          command: helm upgrade --install --wait ${{ vars.HELM_RELEASE_NAME }} ${{ vars.HELM_CHART_PATH }} -f ${{ vars.HELM_CHART_PATH }}/values.yaml
